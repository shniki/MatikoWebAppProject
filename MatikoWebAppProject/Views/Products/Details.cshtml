@model MatikoWebAppProject.Models.Products

@{
    ViewData["Title"] = Html.DisplayFor(model => model.Name);
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link href="~/css/StyleItem.css" rel="stylesheet" />

<div class="images">
    <img src=@Html.DisplayFor(model => model.ImageUrl) />
</div>

<div class="product">
    <p>
        @Html.DisplayFor(model => model.Gender)
        //
        @ViewBag.productscategoryName
    </p>
    <h1>
        @Html.DisplayFor(model => model.Name)
    </h1>

    <div class=star-rate>
        @if (ViewBag.rate == 0)
        {
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
        }
        @if (ViewBag.rate == 1)
        {
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
        }
        @if (ViewBag.rate == 2)
        {
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
        }
        @if (ViewBag.rate == 3)
        {
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star"></span>
            <span class="fa fa-star"></span>
        }
        @if (ViewBag.rate == 4)
        {
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star"></span>
        }
        @if (ViewBag.rate == 5)
        {
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
            <span class="fa fa-star checked"></span>
        }
    </div>

    <h2>
        $@Html.DisplayFor(model => model.Price)
    </h2>
    <p class="pick">COLOR:</p>
    <a id="dark">@Html.DisplayFor(model => model.color)</a>
    <p class="pick">SIZE:</p>
    <div class="sizes">
        @{
            string sizes = ViewBag.productscategorySizes;
            string[] sizesarr = sizes.Split();
        }
        <select id="selectSize" class="form-select" style="width:200px;" aria-label="Default select example">
            <option value="" selected data-default>Please select</option>
            @for (int i = 0; i < sizesarr.Length; i++)
            {
                <option class="size" value="@(sizesarr[i])">
                    @sizesarr[i]
                </option>
            }
        </select>
    </div>
    <div class="buttons">
        <button id="add" class="add" onclick="AddToCart(@(Model.Id))">Add to Cart</button>
        <button class="like" onclick="AddToWishList(@(Model.Id))"><span>♥</span></button>
    </div>
</div>

<script>
    sizeselect = document.getElementsById('selectSize').value;
    function AddToCart(id) {
        sizeval = sizeselect.options[sizeselect.selectedIndex].value;
        if (sizeval == "")
            alert("You must choose a size");
        else {
            window.location.href = Url.Action("Cart", "Orders", new { products = id, size = sizeval, isAddition = 1 });
        }
    }
    function AddToWishList(id) {
        sizeval = sizeselect.options[sizeselect.selectedIndex].value;
        if (sizeval == "")
            alert("You must choose a size");
        else {
            window.location.href = Url.Action("Index", "WishList", new { products = id, size = sizeval, isAddition = 1 });
        }
    }

</script>



